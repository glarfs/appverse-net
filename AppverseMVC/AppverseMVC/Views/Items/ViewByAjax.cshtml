@*Copyright (c) 2014 GFT Appverse, S.L., Sociedad Unipersonal.

    This Source Code Form is subject to the terms of the Appverse Public License
    Version 2.0 (“APL v2.0”). If a copy of the APL was not distributed with this
    file, You can obtain one at http://www.appverse.mobi/licenses/apl_v2.0.pdf. [^]

    Redistribution and use in source and binary forms, with or without modification,
    are permitted provided that the conditions of the AppVerse Public License v2.0
    are met.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    DISCLAIMED. EXCEPT IN CASE OF WILLFUL MISCONDUCT OR GROSS NEGLIGENCE, IN NO EVENT
    SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT(INCLUDING NEGLIGENCE OR OTHERWISE)
    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE.*@

@using Appverse.Core.Repositories;
@using Appverse.Web.Models;
@using Appverse.Web.Components
@model Page<Appverse.Web.Models.Item>
@{
    ViewBag.Title = "Appverse Web# MVC Showcase";
    ViewBag.Submenu = 2;
}

@Html.Partial("_menu")

<div class="well">
    <fieldset>
        <legend>Table</legend>
        <p>
            The business layer queries for all items and the webpage only contains the items that are showed. When clicking Next or Previous, only is reloaded the partial view that contains the table.<br />
            Database operations are performed using NHibernate as a ORM.<br />
            Dependency Injection is used to obtain the Session in each http request.<br />
        </p>
    </fieldset>
</div>

<p></p>
<p>
    @Html.ActionLink("Create New", "Create")
</p>

@{
    var grid = new WebGrid(Model.Items, canPage: true, rowsPerPage: ViewBag.PageSize,
    ajaxUpdateContainerId: "gridContent");
}

<div id="gridContent">
    @grid.GetHtml(htmlAttributes: new { id = "grid", @class = "table table-striped table-bordered table-hover" },
            mode: WebGridPagerModes.All,
            firstText: "<< First",
            previousText: "< Prev",
            nextText: "Next >",
            lastText: "last >>",
            columns: grid.Columns(
                grid.Column("Id", "Id" + @Html.SortDirection(ref grid, "Id")),
                grid.Column("Title", @Localization.Model.Item.Title + @Html.SortDirection(ref grid, "Title")),
                grid.Column("Description", @Localization.Model.Item.Description + @Html.SortDirection(ref grid, "Description")),
                grid.Column("Moment", @Localization.Model.Item.When + @Html.SortDirection(ref grid, "Moment"), item =>
                    {
                        var val = item.Value as Item;
                        return val.Moment.ToString(System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern);
                    }
                ),
                grid.Column("Location", @Localization.Model.Item.Where + @Html.SortDirection(ref grid, "Location"), (item) =>
                    {
                        var loc = item.Location as Location;
                        return Html.DisplayFor(modelItem => loc.Name);
                    }
                ),
                grid.Column("Value", @Localization.Model.Item.Value + @Html.SortDirection(ref grid, "Value"), item =>
                    {
                        var val = item.Value as Item;
                        return Html.DisplayFor(modelItem => val.Value);
                    }
                ),
                grid.Column(
                            header: "",
                            style: "text-align-center",
                            format: item => new HtmlString(
                                Html.ActionLink("Edit", "Edit", new { ID = item.ID }).ToString() + " | " +
                                        Html.ActionLink("Details", "Details", new { ID = item.ID }).ToString() + " | " +
                                        Html.ActionLink("Delete", "Delete", new { ID = item.ID }).ToString()
                )
            )
        )
    )
</div>

@*Alternative
    <div id="gridContent2">
        @{var dbColumns = new List<string>() { "Id", "Title", "Description", "Moment", "Value" };
        var columns = new List<string>() { "Id", @Localization.Model.Item.Title, @Localization.Model.Item.Description, @Localization.Model.Item.When, @Localization.Model.Item.Where, @Localization.Model.Item.Value };}
        @Html.WebGridList(list: Model.Items.ToList(), titleColumns: columns, dbColumns: dbColumns, pager: Model.PageSize, ajaxContainer: "gridContent2", controler: "Items")
    </div>*@

<div id="partialSection">
    @Html.Partial((string)ViewBag.HelpPage.Page)
</div>