@*Copyright (c) 2014 GFT Appverse, S.L., Sociedad Unipersonal.

    This Source Code Form is subject to the terms of the Appverse Public License
    Version 2.0 (“APL v2.0”). If a copy of the APL was not distributed with this
    file, You can obtain one at http://www.appverse.mobi/licenses/apl_v2.0.pdf. [^]

    Redistribution and use in source and binary forms, with or without modification,
    are permitted provided that the conditions of the AppVerse Public License v2.0
    are met.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    DISCLAIMED. EXCEPT IN CASE OF WILLFUL MISCONDUCT OR GROSS NEGLIGENCE, IN NO EVENT
    SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT(INCLUDING NEGLIGENCE OR OTHERWISE)
    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE.*@

<h3>Partial views</h3>
<p>
    If you want to reuse a view in your web application, you can go for the partial view concept. Very useful when having views for different devices and you want to share some content between them.
</p>

@if (ViewBag.HelpPage.SummaryMode == false)
{
    <p>
        One of the great advantages of using MVC is the partial view. If you need to reuse the already developed thing in asp.net web forms "Web user control" is there, in MVC it is <strong>Partial view.</strong>
        Partial view can be used as a user control for reusabilit and for updating a part of the page we can use AJAX and Partial Views not only for breaking up pages and reusing content but also for doing Ajax calls. 
        By using the combination of AJAX and partial view, you simply place your HTML and/or JavaScript in a separate View file, probably placed in your Shared views folder so it can be used easily across views. 
        Then you can either use it as a control, by placing @@Html.Partial(...) calls on your View as desired, or you can render it in run-time as a response to an Ajax call.<br /><br />

        <script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"></script>
        Example: Rendering the "_TechnicalLandscape", "_MVC" and "_WebApi" partial views.
        <pre class="prettyprint">
        &lt;div class="row"&gt;
            &lt;div class="col-md-4"&gt;
                @@Html.Partial("_TechnicalLandscape")    
            &lt;/div&gt;
            &lt;div class="col-md-4"&gt;
                @@Html.Partial("_MVC")        
            &lt;/div&gt;
            &lt;div class="col-md-4"&gt;
                @@Html.Partial("_WebApi")        
            &lt;/div&gt;
        &lt;/div&gt;
    </pre>

    @*<a class="btn btn-default" href="http://www.asp.net/mvc/tutorials/mvc-4/bundling-and-minification">Learn more…</a>*@
    </p>
    <p>

    </p>
}

